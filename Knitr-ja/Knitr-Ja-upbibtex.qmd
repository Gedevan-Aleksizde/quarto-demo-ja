---
title: "Quarto の日本語組版 PDF 文書設定 (upBibTeX 使用版)"
format:
  pdf:
    keep-tex: true
    documentclass: bxjsarticle
    dev: cairo_pdf
    classoption:
      - pandoc
      - ja=standard
      - jafont=noto-otf
    mainfont: Deja Vu Serif
    sansfont: Deja Vu Sans
    monofont: Iosevka Term Extended
    cite-method: natbib
  html:
    self-contained: true
  word: default
pdf-engine: latexmk
latex-auto-mk: false
pdf-engine-opt:
  - -lualatex
  - -outdir=out
crossref:
  fig-title: 図
  tbl-title: 表
  title-delim: ":"
  fig-prefix: 図
  tbl-prefix: 表
  eq-prefix: 式
  sec-prefix: セクション
  ref-hyperlink: true
bibliography: ../quarto.bib
biblio-title: 参考文献
biblio-style: plainnat
---

# 基本設定

:::{.callout-warning}
## 警告

`.latexmkrc` を設定していないとおそらくハングアップします. 少なくとも `bibtex` を `upbibtex` でオーバーライドしてください.

latexmkrc の設定例: https://texwiki.texjp.org/?Latexmk

:::


* LuaLaTeX または XeLaTeX でのコンパイルを想定している.
    * 既定では LuaLaTeX を使用している. `pdf-engine-opt:` 以下のオプション `-lualatex` がそれに対応している. XeLaTeX にしたい場合は `-pdfxe` に書き換える.
* `jafont=...` でフォントプリセットを設定可能. 指定可能な名称は LuaLaTeX/XeLaTeX それぞれ luatex-japreset, bxjscls (zxjafont) のドキュメント参照. 今回は比較的環境依存しない `haranoaji` (原ノ味) を採用.
* `mainfont`/`sansfont`/`monofont: ` はそれぞれメインフォント(通常は明朝体), サンセリフフォント (通常は見出しや太字で使用するゴシック体), 等幅フォントの指定. それぞれプリセットより優先される.
    * これはあくまでオプションの紹介として書いただけ. **多くの環境ではこの設定のままだとエラーが出るか文字化けするだろう**. 良くても別の (見慣れない) フォントにフォールバックする可能性が高い. 変更するか消してほしい.
    * **rmdja** パッケージでは欧文と和文でさらに個別指定できるようになっているが, 現状はそこまで細かい設定はできないし, ほとんどの人は気にしないだろう. むしろ煩雑にさえ感じるかもしれない.
* upbibtex で引用文献を処理する設定.  デフォルトの bibtex は `.latexmkrc` を設定しておかないとハングアップする.
    * `biblio-style:` に使用したい `.bst` ファイルを指定する.
    * デフォルトの plainnat は欧文用なので私の名前が名姓の順番で表示されてしまう.
    * jecon.bst や, ここ^[https://www.okomeda.net/wp/category/latex/bibtex/]に書かれている日本語に対応した bst ファイルが使用できる. ただし後者は pBibTeX のみの対応のものも含まれているかもしれない.
* 上記設定は `latex-auto-mk: false` で Pandoc 側の LaTeX 制御プログラムを使うことで実現できる.
    * この設定では `keep-tex: true` を指定しても `.tex` ファイルが残らないため, `pdf-engine-opt` に中間ファイルを全て残す出力ディレクトリを設定した.

# Markdown

1. 番号付きの
1. 箇条書き
    1. ネストも
    1. できる

## 数式の表示

ブラック=ショールズ方程式 (@eq-black-scholes)

$$
\frac{\partial \mathrm C}{ \partial \mathrm t } + \frac{1}{2}\sigma^{2} \mathrm S^{2}
\frac{\partial^{2} \mathrm C}{\partial \mathrm C^2}
  + \mathrm r \mathrm S \frac{\partial \mathrm C}{\partial \mathrm S}\ =
  \mathrm r \mathrm C 
$$ {#eq-black-scholes}


HTML と PDF 双方で相互参照を使用したい場合, LaTeX の `\label()` ではなく Quarto の構文を使用する. KaTeX も使えるが PDF と互換性があるとは限らない?

## コードの埋め込み

@fig-plot1-1, @fig-plot1-2 を見よ.

```{r}
#| label: fig-plot1
#| echo: true
#| warning: false
#| fig-cap: "複数の図"
#| fig-subcap:
#|   - "Air Quality"
#|   - "箱ひげ図"
#| layout: [50, 50]

library(ggplot2)
ggplot(airquality, aes(Temp, Ozone)) + 
        geom_point() + 
        geom_smooth(method = "loess", se = F, formula = y ~ x)

ggplot(mtcars, aes(x = factor(cyl), y = mpg)) + geom_boxplot()
```

次に @tbl-tables-cars, @tbl-tables-pressure を見よ.

```{r}
#| label: tbl-tables
#| echo: false
#| tbl-cap: "複数の表"
#| layout-ncol: 2

knitr::kable(head(cars), booktabs = T,  caption = "Cars {#tbl-tables-cars}")
knitr::kable(head(pressure), booktabs = T, caption = "Pressure {#tbl-tables-pressure}")
```

# 文献引用

[@R-quarto], @R-rmdja
